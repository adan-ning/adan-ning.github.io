[
    {
        "title": "CodeCreate(代码生成器)",
        "uri": "posts/代码生成器",
        "content": "Springboot                                                                     java import com baomidou mybatisplus core exceptions MybatisPlusException  import com baomidou mybatisplus core toolkit StringPool  import com baomidou mybatisplus core toolkit StringUtils  import com baomidou mybatisplus generator AutoGenerator  import com baomidou mybatisplus generator InjectionConfig  import com baomidou mybatisplus generator config    import com baomidou mybatisplus generator config po TableInfo  import com baomidou mybatisplus generator config rules NamingStrategy  import com baomidou mybatisplus generator engine FreemarkerTemplateEngine  import java util ArrayList  import java util List  import java util Scanner  public class CodeGenerator          param tip  return            public static String scanner String tip   Scanner scanner   new Scanner System in   StringBuilder help   new StringBuilder    help append       tip       System out println help toString      scanner hasNext     String ipt   scanner next     StringUtils isNotBlank ipt    return ipt      throw new MybatisPlusException          tip                  1                           2             3               param args    public static void main String   args           AutoGenerator mpg   new AutoGenerator           GlobalConfig gc   new GlobalConfig    String projectPath   System getProperty  user dir    gc setOutputDir projectPath   src main java    gc setAuthor  lqx    gc setOpen false   gc setSwagger2 true         Swagger2   gc setBaseResultMap true    XML ResultMap gc setBaseColumnList true    XML ColumnList     service      I  D0 UserService gc setServiceName   sService    mpg setGlobalConfig gc           DataSourceConfig dsc   new DataSourceConfig              dsc setUrl  jdbc mysql   localhost 3306 db serverTimezone UTC    dsc setDriverName  com mysql cj jdbc Driver    dsc setUsername  root    dsc setPassword  1234    mpg setDataSource dsc         PackageConfig pc   new PackageConfig             pc setParent  com lqx    setEntity  entity    setMapper  mapper    setService  service    setServiceImpl  service impl    setController  controller    mpg setPackageInfo pc           InjectionConfig cfg   new InjectionConfig      Override public void initMap        nothing                 freemarker String templatePath     templates mapper xml ftl              velocity    String templatePath     templates mapper xml vm              List focList   new ArrayList                   focList add new FileOutConfig templatePath     Override public String outputFile TableInfo tableInfo                      Entity             xml              return projectPath     src main resources mapper     pc getModuleName         tableInfo getEntityName      Mapper    StringPool DOT_XML           cfg setFileCreate new IFileCreate      Override public boolean isCreate ConfigBuilder configBuilder  FileType fileType  String filePath                      checkDir                         fileType    FileType MAPPER            mapper                 false return  new File filePath  exists                  return true           cfg setFileOutConfigList focList   mpg setCfg cfg           TemplateConfig templateConfig   new TemplateConfig                                    ftl  vm                             templateConfig setEntity  templates entity2 java       templateConfig setService       templateConfig setController    templateConfig setXml null   mpg setTemplate templateConfig           StrategyConfig strategy   new StrategyConfig    strategy setNaming NamingStrategy underlinetocamel   strategy setColumnNaming NamingStrategy underlinetocamel      strategy setSuperEntityClass                       strategy setEntityLombokModel true   strategy setRestControllerStyle true              strategy setSuperControllerClass                                         strategy setSuperEntityColumns  id    strategy setInclude scanner                split        strategy setControllerMappingHyphenStyle true      strategy setTablePrefix pc getModuleName      _                   mpg setStrategy strategy   mpg setTemplateEngine new FreemarkerTemplateEngine     mpg execute",
        "objectID": "posts/代码生成器",
        "date": "2024-02-29T00:00:00.000Z",
        "draft": false,
        "tags": [
            "java"
        ],
        "categories": [
            "编程技术"
        ]
    },
    {
        "title": "搭建hugo博客(buildblog)",
        "uri": "posts/搭建hugo博客(buildblog)",
        "content": "Hugo Github                 Hugo               Hexo             GitHub io                                           Hugo Git    Hugo      Install Hugo   Hugo                                Win11                  Github    Hugo         Realeases               hugoextended0 82 0_Windows 64bit zip          hugo exe              D  softwares Hugo bin                 win R   sysdm cpl                    Path   Path             hugo version                  Git  Win11     exe                                                Git                                                                    2 39 2 64bit                            Hugo               Hugo          H  HugoWebsite                       Hugo     blog         hugo new site blog      Hugo       hugo theme              LoveIt     Hugo Themes                      blog cd blog     themes                   cd themes        themes      git clone https   github com dillonzq LoveIt git themes LoveIt                                                Hugo    https   themes gohugo io        https   github com dillonzq LoveIt git   Hugo               HugoWebsite    config toml      hugo toml                  hugo serve   buildDrafts      http   localhost 1313                           config toml hugo toml           Github    Hugo      Hugo           H  HugoWebsite blog     hugo      Hugo                       public                GitHub                   H  HugoWebsite blog public        Git       HTML        public       public           Git    git init   Git             H  HugoWebsite blog public       Git           https   github com adan ning adan ning github io git  git remote add origin https   github com adan ning adan ning github io git        H  HugoWebsite blog public                        git status                          git add                      git commit  m  first commit             H  HugoWebsite blog public               git push  u origin master                              git                     pull        push            git                       git pull                                                                             1      git             2 pull                                                      Git   fatal  refusing merge unrelated histories              ctrl       wq     git pull origin master   allow unrelated histories 3                                           4      git add   git commit  m  first commit  5      git push  u origin master                       https   github    github io                         1               H  HugoWebsite blog hugo new post         md 2     H  HugoWebsite blog content post             3       http   localhost 1313  hugo server  D 4    Hugo    hugo 5       H  HugoWebsite blog public           git add   git commit  m  commit info  6          git push  u origin master      1        H  HugoWebsite blog 2     H  HugoWebsite blog content post              3       http   localhost 1313  hugo server  D 4    Hugo    hugo 5       H  HugoWebsite blog public           git add   git commit  m  commit info  6          git push  u origin master      1        H  HugoWebsite blog 2           H  HugoWebsite blog content post  H  HugoWebsite blog public                public                                       git                   hugo         3       http   localhost 1313  hugo server  D 4    Hugo    hugo 5       H  HugoWebsite blog public           git add   git commit  m  commit info  6          git push  u origin master                  GitHub jsDelivr PicGo             zhihu com                     blog                                         themes LoveIt exampleSite                 draft         false      draft                                   Hugo",
        "objectID": "posts/搭建hugo博客(buildblog)",
        "date": "2024-03-01T00:00:00.000Z",
        "draft": false,
        "tags": [
            "hugo"
        ],
        "categories": [
            "hugo"
        ]
    },
    {
        "title": "操作系统(第一章)",
        "uri": "posts/操作系统",
        "content": "os                                                 cpu                                                                                                                             spooLing                                             cpu  i o                 cpu  i o                                                                                                                                                                                                                                                         I O                              os      ppt",
        "objectID": "posts/操作系统",
        "date": "2024-03-04T00:00:00.000Z",
        "draft": false,
        "tags": [
            "操作系统"
        ],
        "categories": [
            "操作系统"
        ]
    },
    {
        "title": "操作系统(第二章)",
        "uri": "posts/操作系统2",
        "contentwait  s  signal  s              S_      0       1 wait s  p s          1 signal s  v s           wait s  signal s           S 0                     S  S value      s value 0 S L            wait s       S value 1  p s  1 1 0 S value 0  p s  0 1  1 signal s     S value  1  v s   1 1 0 S value  2  v s   2 1  1               wait s  signal s                                 S value                S value",
        "objectID": "posts/操作系统2",
        "date": "2024-03-05T00:00:00.000Z",
        "draft": false,
        "tags": [
            "操作系统"
        ],
        "categories": [
            "操作系统"
        ]
    },
    {
        "title": "操作系统(第三章)",
        "uri": "posts/操作系统3",
        "content": "1                                               T_i             T   frac 1  n   underset i 1   stackrel n   sum  T_i   Wi   frac Ti  T_s    W   frac 1  n   underset i 1   stackrel n   sum  W_i    T         Ti        Ts       W           W_i                       FCFS                                     SJ P F                                                                                                                                       V         Rp    frac tw ts  ts    t_w             RR                          10 100ms             FCFS                     1   1      2 1 3        R 1                       5   P1 P2 P3 P4 P5   1                                                                                                    1ms                2ms      SJF                            EDF                                             p1  rightarrow p2  rightarrow p3  rightarrow p4        p1  rightarrow p3  rightarrow p4  rightarrow p2         p1  rightarrow p3  rightarrow p4  rightarrow p2                          LLF   A    200ms           100ms      10ms  A      200 100 10 90                                                                                                                   p1 p2       R1 R2       Req         Rel           1 2 3       4                                                                         4           Max       Allocation         Needi         Available               Max Allocation Needi Needi Available      leq                              Rightarrow              Rightarrow       Rightarrow           Available 12  5 2 2  3 Needi  p1 10 5 5 p2 4 2 2 p3 9 2 7        p2  rightarrow p1  rightarrow p3   p2    3      Available  2 Allocation  5                                            Request   Rightarrow          3         Request           workAvailable      Finish                 3",
        "objectID": "posts/操作系统3",
        "date": "2024-03-26T00:00:00.000Z",
        "draft": false,
        "tags": [
            "操作系统"
        ],
        "categories": [
            "操作系统"
        ]
    },
    {
        "title": "操作系统(第四章)",
        "uri": "posts/操作系统4",
        "content": "rightarrow                                                                                                                                                             rightarrow                           rightarrow                           rightarrow                                     rightarrow                        rightarrow                         1KB       leq                 geq                                      rightarrow                                            rightarrow                       32       1KB    16KB                                    093C H                      32  times 1KB   32KB  rightarrow 2  15   rightarrow 15bit        1KB  rightarrow 2  10   rightarrow 10bit        15 10 5bit     000 0  1001 9  0011 3  1100 C        15    093C   2    15       16KB 2  14        14bit  10bit              4bit    01 0001 0011 1100        113C H                     0 137   1 4000   2 3600   5 230             0 137  1373K            2 3600  3600           leq",
        "objectID": "posts/操作系统4",
        "date": "2024-04-10T00:00:00.000Z",
        "draft": false,
        "tags": [
            "操作系统"
        ],
        "categories": [
            "操作系统"
        ]
    },
    {
        "title": "操作系统(第五章)",
        "uri": "posts/操作系统5",
        "content": "4                                                                                                                                                                                               3                           DPT                                                   frac              frac 6  12  times 100    50    FIFO                                   frac 9  12   times 100     75                                             2    LRU                                                   frac 7  12  times 100    approx 58",
        "objectID": "posts/操作系统5",
        "date": "2024-04-18T00:00:00.000Z",
        "draft": false,
        "tags": [
            "操作系统"
        ],
        "categories": [
            "操作系统"
        ]
    },
    {
        "title": "操作系统(第六章)",
        "uri": "posts/操作系统6",
        "content": "I O     I O          I O      I O              rightarrow I O    rightarrow I O     rightarrow I O       I O     4   cpu              cpu                   I O      cpu          I O    busy 0 1 cpu I O                                 cpu                     I O                                                         PSW        PC                          rightarrow                  PC 1  rightarrow PC               cpu I O                                rightarrow cpu                       DMA         DMA          cpu I O        DMA                I O            DR        MAR          DC        CR                   cpu I O              cpu         cpu               cpu                         DMA                           I O         I O                 CPU I O               CPU         CPU            CPU I O                                                                                                    T  I O            M                     C cpu        T M      T C             T M C         MAX T C  M                            T 100us                 M 50us CPU             C 50us                          100 50 50 200us                            1              100         1              5         1            90             2                  T1 M1 T2 M2 C_2  100 5 100 5 90 300us        10                                 15us              5us            1us     T1 M1 C_ 10   10 1   times 20  15 5 1 9 X 20 201us        1    2      T  I O            M                     C cpu        T M      T C             T M C         MAX T M C                             T 100us                 M 50us CPU             C 50us                        100 50 50 200us                            1              100         1              5         1            90             2                  T1 T2 M2 C2  100 100 5 90 295us        10                                 15us              5us            1us     T1 T  times 9  M 10  C_ 10   150 6 156us",
        "objectID": "posts/操作系统6",
        "date": "2024-04-25T00:00:00.000Z",
        "draft": false,
        "tags": [
            "操作系统"
        ],
        "categories": [
            "操作系统"
        ]
    },
    {
        "title": "数据结构(第一章)",
        "uri": "posts/数据结构",
        "content": "Data_Structureascal      C        C     C                                      c n0       n  n_0     f n",
        "objectID": "posts/数据结构",
        "date": "2024-03-10T00:00:00.000Z",
        "draft": false,
        "tags": [
            "数据结构"
        ],
        "categories": [
            "数据结构"
        ]
    },
    {
        "title": "数据结构(第二章)",
        "uri": "posts/数据结构2",
        "content": "n                                                                                                                                                                                                                           100                          Loc ai    Loc ai   i 1 d  1L length 1  return ERROR    i     if L length  L listsize                   newbase    ElemType  realloc L elem  L listsize LISTINCREMENT sizeof ElemType    if  newbase  exit OVERFLOW            L elem   newbase        L listsize  LISTINCREMENT             q   L elem i 1      q      for p   L elem L length 1   p  q   p   p 1  p                  q e      e   L length       1 return OK      ListInsert_Sq                                     T n  O 1               n    T n  O n          pi    i                 P1 P2     Pi    P_n 1  n 1              Eis    sum  limits  n 1  i 1 Pi n i 1  1  n 1  sum limits  n 1  i 1  n i 1  n 2   T n  O n                S n  O 1                             i  1 leq  leq n          i 1  n  n i                     Status ListDelete_Sq SqList  L int i ElemType  e           L    i      e       i     1L length   return ERROR   i     p   L elem i 1      p         e  p             e q L elem L length 1            for   p pnext  j 1        p            ERROR while p  jnext    j    if  p  j i  return ERROR     i       e p  data      i    return OK     GetElem_L           i             C               i     Status ListInsert_L LinkList  L int i ElemType e                L   i         e p L  j 0  while p  jnext    j        i 1    if  p  j i 1  return ERROR    i  1       1 s  LinkList malloc sizeof LNode            s  data e  s  next p  next      L  p  next s  return OK     ListInsert_L   C               i     Status ListDelete_L LinkList  L int i ElemType  e                L     i      e     p L  j 0  while p  next  jnext    j    if   p  next   j i 1  return ERROR            q p  next  p  next q  next            e q  data  free q   return OK     ListDelete_L                                                                                                                                              typedef struct LNode  ElemType data  struct LNode  next   LNode  LinkList              L  LinkList malloc sizeof LNode    L  next   NULL       p       p    LinkList malloc sizeof LNode    p  data a      p                   p  p  next L  next  L  next p    2 3               c           LinkList CreateList_LH int n   int i                 LinkList head    head           LNode  p   p           head null  for i n i 0   i              p  LNode   malloc sizeof LNode                 scanf   d   p  data            p     p  next head  head p                                                      r           L    LinkList malloc sizeof LNode    L next NULL  r L                   p  LinkList malloc sizeof LNode    p  data ai  p  next NULL             r       r  next p  r p    2 3                                         Head          r head NULL  r NULL            p                     r  next p  r p                            1  r                 2  r       head p r p    2 3                                      C    LinkList CreateList_LT    char ch  LinkList head  LNode p r    p         r         head NULL  r NULL  while  ch getchar       n    p  LNode   malloc sizeof LNode    p  data ch  if head  NULL            head p  else r  next p                r p    if r  NULL  r  next NULL  return head               C              Status ListDelete_L LinkList  L int i ElemType  e                L     i      e     p L j 0  while p  next  jnext    j    if   p  next   j i 1  return ERROR            q p  next  p  next q  next            e q  data  free q   return OK     ListDelete_                         e       i               p     a_ i 1        s  e    s next     p     s  next p  next    s prior     p   s  prior p   p next     s   p  next s   s      prior     s s  next prior s   C             Status ListInsert_DuL DuLinkList  L int i ElemType e                  L  i         e   i     1data e  s  prior p  prior  p  prior  next s  s  next p  p  prior s  return OK     ListInsert_DuL              i              p     a_i    p      next     p     p  prior  next p  next    p      prior     p     p  next prior p  prior      p   C             Status ListDelete_DuL DuLinkList  L int i ElemType  e                   L  i    i     1data  p  prior  next p  next  p  next  prior p  prior  free p   return OK     ListDelete_DuL              Status MergeList_L LinkList  La LinkList  Lb LinkList  Lc int  compare  ElemType ElemType             La Lb               La Lb         Lc Lc            if  InitList Lc   return ERROR             ha GetHead  La   hb GetHead  Lb    ha hb    La Lb     pa NextPos  La ha   pb NextPos  Lb hb    pa pb    La Lb      while pa  pb    La Lb    a GetCurElem  pa   b GetCurElem  pb    a b           if     compare    a  b  b  DelFirst hb g   Append  Lc q   pb NextPos Lb hb     while  pa  Append  Lc  pa      La      else Append Lc pb      b      FreeNode ha   FreeNode  hb      La Lb     return OK    MergeList _L                       A x  p0 p1x p2x 2   cdot",
        "objectID": "posts/数据结构2",
        "date": "2024-03-10T00:00:00.000Z",
        "draft": false,
        "tags": [
            "数据结构"
        ],
        "categories": [
            "数据结构"
        ]
    },
    {
        "title": "数据结构(第三章)",
        "uri": "posts/数据结构3",
        "content": "Stack       Stack                                       top         bottom                                                  LIFO          A B C D                          DCBA         InitStack  S       S StackEmpty            Push e      e     Pop e              e        Gettop                                          S  a1 a2 a3   an     a1         an             a1 a2 a3   an                                                        Last First Out LIFO                                                                                      c                       define STACKINITSIZE 100  define STACKINCREMENT 10  typedef struct   SElemType  base                    SElemType  top                     int stacksize                  SqStack           S SqStack        base      Top             S base NULL     S top S base            S top S top 1            S top S top 1     S top S base  S stacksize     C      c       Status InitStack SqStack  S            S base    ElemType    malloc STACKINITSIZE  sizeof SElemType     if  S base  exit  OVERFLOW   S top   S base  S stacksize   STACKINITSIZE   return OK     InitStack        int StackEmpty SqStack  S    return S base  S top            int StackFull SqStack  S    return S top S base  S stacksize            Status Push SqStack  S  SElemType e         e         S top   S base    S stacksize  return OVERFLOW        S top   e  S top    return OK     Push      void Pop SqStack  S  SElemType  e    if S top  s base  return UNDERFLOW        S top    e  S top  return                                                                                                     c              typedef struct stacknode   SElemType data  struct stacknode  next    stacknode  linkstack             c       void InitStack linkStack  p    p NULL           int StackEmpty linkstack p    return p  NULL         void Push linkstack  p  SElemType e    stacknode  q  q  stacknode  malloc sizeof stacknode    q  data e  q  next p  p q                  SElemType Pop linkstack  p    SElemType x                linkstack q p  if p  NULL  error  stack underflow     p p  next           x q  data  free q            return x            SElemType GetTop linkstack p    if p  NULL  error  stack empty     return p  data                 FILO                      c void conversion      InitStack S          scanf    d   n   while n   Push S n 2   n n 2    while   StackEmpty S    Pop S e   printf   d  e                                                                                                                                                 c a b  c d   e f     m  include  define STACKINITSIZE 100              define STACKINCREMENT 10             define MAXLENGTH 25            define OK 1  define ERROR 0  define TRUE 1  define FALSE 0 typedef struct   int x  int y   PosType       typedef struct   int ord               PosType seat               int di                     SElemType          typedef struct Stack  SElemType  base         SElemType  top         int stacksize                SqStack  typedef int Status  typedef int MazeTypeMAXLENGTH           int x  y           int curstep   1                         1 PosType begin           PosType end           PosType direc 4       0 1   1 0   0  1    1 0                   MazeType maze            mazeMAXLENGTH           0 Status InitStack SqStack  S   Status StackEmpty SqStack S   Status Push SqStack  S  SElemType e   Status Pop SqStack  S  SElemType  e   Status ClearStack SqStack  S   Status DestroyStack SqStack  S   void Init    void Print    void MarkPrint PosType e   Status Pass PosType b   void FootPrint PosType b   PosType NextPos PosType b  int di   Status MazePath PosType start  PosType end   int main     Init             MazePath begin  end     printf             n    Print      else   Print    printf       n      return 0               Status InitStack SqStack  S                        S  base    SElemType malloc STACKINITSIZEsizeof SElemType      S  base  exit EXIT_FAILURE   S  top   S  base                  S  stacksize   STACKINITSIZE  return OK    Status StackEmpty SqStack S     S base    S top  return TRUE  else return FALSE    Status Push SqStack  S  SElemType e     S  top   S  base    S  stacksize    S  base    SElemType realloc S  base   S  stacksize   STACKINCREMENT  sizeof SElemType      S  base  exit EXIT_FAILURE   S  top   S  base   S  stacksize  S  stacksize    STACKINCREMENT    S  top     e      S  top    e  S  top    return OK    Status Pop SqStack  S  SElemType  e      S  base  return ERROR  else  S  base    S  top  return ERROR     S  top   e    S  top   return OK    Status ClearStack SqStack  S    S  base   S  top  return OK    Status DestroyStack SqStack  S    S  top   NULL  S  stacksize   0  free S  base   return OK             void Init     int i  j  int x1  y1  printf             n    scanf   d  d    x   y                     x 1 y 1  i   1                  Pop OPTR theta   Pop OPND b   Pop OPND a   Push OPND Operate a theta b    break      switch    while return GetTop OPND      EvaluateExpression                                         c long f int n  ",
        "objectID": "posts/数据结构3",
        "date": "2024-03-31T00:00:00.000Z",
        "draft": false,
        "tags": [
            "数据结构"
        ],
        "categories": [
            "数据结构"
        ]
    },
    {
        "title": "数据结构(第四章)",
        "uri": "posts/数据结构4",
        "content": "String                      S  a1a2a3 an      S      a1a2a3 an                  ai 1 i n                                            Empty String                                     Blank String                                             SubString                                                                       A B   A  This string  B  is   B A    A    B A                      3     B A     3                                        StrAssign  S  char  t       int StrCompare S  T       int StrLength S       char strcat char to  char  from       SubString  sub  S  pos  len        char strcpy char to char  from        int index Sub S                    c  define maxstrlen 256 typedef char sstring maxstrlen   sstring s    s   255                                                                              c typedef struct  char ch MaxStrlen   int length   sstring                Concat  T S1 S2     SubString  Sub S pos len   c Status SubString Sstring  Sub Sstring S int pos int len       S  pos       len   Sub  pos S Length    lenS Length pos 1  return ERROR  Sub ch 0  len 1    S ch pos 1  pos len 2   Sub length   len                                                                                          c   typedef char  string    c                                     typedef struct  char  ch  int length   Hsring                 c Status strassign Hstring  T char  chars                chars  T if T ch  free T ch   for i   0 c   chars c    i   c      chars   if  i    T ch   null  T length   0    else     T ch    char  malloc isizeof char     exit OVERFLOW   T ch 0  i 1    chars 0  i 1   T length   i    return OK           c Status concat Hstring  t  Hstring s1  Hstring s2       s1 s2     t    t ch     char  malloc s1 length  s2 length  sizeof char    exit overflow   t ch 0  s1 length 1    s1 ch 0  s1 length 1   t length   s1 length   s2 length  t ch s1 length  t length 1    s2 ch 0  s2 length 1   return OK           c Status substr Hstring  sub Hstring s int pos int len    poss length    lens length pos 1  return error   sub ch  free sub ch     len    sub ch   null  sub length   0    else  sub ch    char  malloc lensizeof char    sub ch 0  len   1    s pos 1  pos   len 2   s length   len                       frac                                             Pattern Matching      String Matching                                                                                                                                CSDN    c int Index sstring S sstring T int pos          T   S   pos             T   1 pos  Strlength S    pos  j   1   i Strlength T    return  i Strlength T    return 0       Index           O n m    n m                     KMP    c int Index_KMP sstring S sstring T int pos          T   S   pos             T   1 pos  Strlength S  i pos  j 1  while i Strlength T   return  i Strlength T    return 0       Index    next j        c int Get_Index sstring T  int next            T next        next i 1  next 1  0  j 0  while i",
        "objectID": "posts/数据结构4",
        "date": "2024-04-05T00:00:00.000Z",
        "draft": false,
        "tags": [
            "数据结构"
        ],
        "categories": [
            "数据结构"
        ]
    },
    {
        "title": "数据结构(第五章)",
        "uri": "posts/数据结构5",
        "content": "A     A      m                n                                                                                                                                                                                                                  i 1        i                                a 11  a 12    a 1n  a 21  a 22   a 2n     a m1  a m2    a_ mn    PASCAL C                     LOC a ij   LOC a 11     i 1 n j 1 d                               j 1        j       A m n                   a 11  a 21    a m1  a 12  a 22   a m2     a n1  a n2    a_ nm    FORTRAN                LOC a ij   LOC a 11     j 1 m i 1 d                                                                Amnp              LOC a ijk   LOC a 111     i 1 mn   j 1 n  k 1  d                                                                                                                                                                                                                                                   4 4              n n                                                 n                            4 4            4 4              n n                                                                                                                                                                     A  s       s             s",
        "objectID": "posts/数据结构5",
        "date": "2024-04-09T00:00:00.000Z",
        "draft": false,
        "tags": [
            "数据结构"
        ],
        "categories": [
            "数据结构"
        ]
    },
    {
        "title": "数据结构(第六章)",
        "uri": "posts/数据结构6",
        "content": "n n 0          n 0                                     root                            n 1        m m 0          T1 T2 T3   Tm   Ti         root                                                                                                                                                                                                       B  A     A B                                                                                                                             Ti                                                 m m 0                                      m                m                                                                                                               i                                            n n  0                                                                                                                                                                 5          c   d                    1       i     2i 1                 i 1                 2  i 1  2 0 1        i k        k          2  k 1        i k 1                        2   k 1          k        2    2 2  k 1  2    k 1  1           m    i      m  i 1        i 1     2    k       2k 1            k                                    k                k m        frac m k 1  m 1        3           2      n2    0       n0   1   n2  n_0 1               n n1       1                B  n n0 n1 n_2                        n B 1             1   2       B n1 2n2    4    n               log2n  1   log2 n 1      5             i                  2i                   2i 1                   i 2                      k   2 k 1                                                                                  1  2     n            k     n          1  n               1 n                                                                                                            c  define MAXTREESIZE 100 typedef TelemType SqBiTree MAXTREESIZE   SqBiTree bt                                                                   c typedef struct BiTNode  TElemType data  struct BiTNode Lchild Rchild   BiTNode   BiTree                                                                                                                            DLR LDR LRD      DRL RDL RLD      DLR                                                                             c   void preorder  BiTNode  root         root         root  NULL    coutdata         preorder root  Lchild               preorder root  Rchild                  if    preorder        LDR                                                                                   c   void inorder  BiTNode  root         root         root  NULL    inorder root  Lchild               coutdata         inorder root  Rchild                  if    inorder    c   void InOrder  BiTNode  root    InitStack S   Push S root             StackEmpty S     while GetTop S p   p  Push S p  Lchild           Pop S p             StackEmpty S     Pop S p   cout data         Push S p  Rchild            if    while    InOrder        LRD                              BDFGECA  c   void postorder  BiTNode  root     root  NULL    postorder root  Lchild               postorder root  Rchild               coutdata            if    postorder                                     c   typedef enum PointerTag  Link 0 Thread 1   typedef struct BiThrNode  ElemType data  struct BiThrNode Lchild Rchild  PointerTag Ltag  Rtag    BiThrTree                                                 p                p  Rtag 1  p  Rchild         p  Rtag 0  p                              p                                            p                                 c   typedef struct BiThrNode  ElemType data  struct BiThrNode Lchild Rchild  PointerTag Ltag Rtag    BiThrTree  BiThrTree inordernext BiThrTree p     p  rtag  1  return p  Rchild   else   q p  Rchild   q  ltag  0  q q  Lchild  return q       void InThreading BiThrTree p     p    InThreading p  Lchild              p  Lchild          p  Ltag   Thread  p  Lchild   pre      pre  Rchild          pre  Rtag   Thread  pre  Rchild   p    pre   p  InThreading p  Rchild                 InThreading void InOrderThreading BiThrTree  Thrt  BiThrTree root      Thrt                Thrt    BiThrTree malloc sizeof BiThrNode    exit OVERFLOW   Thrt  Ltag   Link  Thrt  Rtag   Thread  Thrt  Rchild   Thrt   root    NULL  Thrt  Lchild   Thrt  else   Thrt  Lchild   root  pre   Thrt  InThreading root                 pre  Rchild   Thrt  pre  Rtag   Thread  Thrt  Rchild   pre       InOrderThreading                                                p                p                       p  Rtag 1  p  Rchild          p  Rtag 0   P          p         f          f       p         f       p               f       P                                                                                                                                        c             define MAX 100 struct node  char data  int parent             typedef struct node NODE  NODE tree MAX                                                                                                  ",
        "objectID": "posts/数据结构6",
        "date": "2024-04-09T00:00:00.000Z",
        "draft": false,
        "tags": [
            "数据结构"
        ],
        "categories": [
            "数据结构"
        ]
    },
    {
        "title": "每次更新hugo博客的操作",
        "uri": "posts/每次更新hugo博客的操作",
        "content": "hugo          hugo           PowerShell   cmd          hugo                   cd e  myblog          markdown  md                          hugo new post FileName md    FileName                    hugo    theme hugo tranquilpeak theme    baseUrl  https   tzq0301 github io     buildDrafts    hugo tranquilpeak theme          https   tzq0301 github io    GitHub  hugo                    GitHub         public      cd public        e  myblog public              git add   git commit  m  yyyy mm dd hh mm  git push  u origin master    yyyy mm dd hh mm                    yyyy mm dd hh mm                               GitHub",
        "objectID": "posts/每次更新hugo博客的操作",
        "date": "2024-02-18T07:56:15.000Z",
        "tags": [
            "hugo"
        ],
        "categories": [
            "hugo"
        ],
        "draft": false
    },
    {
        "title": "用Hugo配合Algolia实现高效美观的站内搜索",
        "uri": "posts/用hugo配合algolia实现高效美观的站内搜索",
        "content": "Hugo  Algolia                   Hugo                                                   Hugo                   Algolia             EVEN       LOVEIT                      Algolia          Application   NEW APPLICATION Name       FREE                     Indices   Index      Indices     Create Index Index name             API Keys     API Keys       Keys                 config yaml  themes    config yaml        key Admin API Key   yaml baseurl   https   www adan ning github io  DefaultContentLanguage   zh cn  hasCJKLanguage  true languageCode   zh cn  title   lqx s blog  theme   loveit  metaDataFormat   yaml  algolia  index     blogloveit  key    9748e4cf6b  appID    KWB5    hugo aligolia         hugo algolia                   hugo aligolia               npm    yarn                      bash   npm install hugo algolia  g                          bash   hugo algolia  s JSON index file created public algolia json   updatedAt   2020 01 23T02 36 09 480Z   taskID  249063848950             dashboard     Indices                                             index     false     hugo toml                Algolia",
        "objectID": "posts/用hugo配合algolia实现高效美观的站内搜索",
        "date": "2024-03-09T00:00:00.000Z",
        "tags": [
            "hugo"
        ],
        "categories": [
            "hugo"
        ],
        "draft": false
    },
    {
        "title": "算法与程序(第一章)",
        "uri": "posts/算法分折与设计",
        "content": "n                            n                               n  2n n                                                                                                                       O     o   g n              T n                 O  T n    O g n                            g n        lim n rightarrow infty  frac Tmax n   g n   c neq0  c          lim n rightarrow infty  frac Tmax n   n 2   frac c4 c5 c6  2       T n  O n2             A       Tmax c1n2 n 4      Tmin c2n2   g n  n2  T n      g n     T n    O g n      T n      g n            o  T n    o g n                             g n        lim n rightarrow infty  frac Tmax n   g n   0     g n    n2 Tmax n  c2nlogn      o n2              T n      g n                             g n        lim n rightarrow infty  frac Tmin n   g n    infty     g n  n Tmin c1nlogn      n              Master",
        "objectID": "posts/算法分折与设计",
        "date": "2024-03-05T00:00:00.000Z",
        "draft": false,
        "tags": [
            "计算机算法设计与分析"
        ],
        "categories": [
            "计算机算法设计与分析"
        ]
    },
    {
        "title": "算法与程序(第四章)",
        "uri": "posts/算法分析与程序4",
        "content": "0 1         n                  wi      vi         c                                                                                                               c 0 wi 0 vi 0 1 i n          n    0 1      x1  x2     xn    xi  0  1   1 i n      stackrel n   underset i 1   sum  wixi  leq c       stackrel n   underset i 1   sum  vixi             0 1                  i 1 i n                                              c 0 wi 0 vi 0 1 i n          n      x1  x2     xn  0 xi 1 1 i n        stackrel n   underset i 1   sum  wixi  leq c       stackrel n   underset i 1   sum  vixi                                                       0 1                                                    vi wi                                                              c                                      c void Knapsack int n  float M  float v    float w    float x      Sort n  v  w   int i   i 1  c  break  x i    1  c    w i      i void Loading int x    Type w    Type c  int n    int  t   new int  n 1   Sort w  t  n    int i 1  1      y1 1 yk 0 yi xi 1m    n                                                    O nlogn      7      1 2 3 4 5 6 7  3   M1 M2 M3                   2 14 4 16 6 5 3",
        "objectID": "posts/算法分析与程序4",
        "date": "2024-04-10T00:00:00.000Z",
        "draft": false,
        "tags": [
            "计算机算法设计与分析"
        ],
        "categories": [
            "计算机算法设计与分析"
        ]
    },
    {
        "title": "算法与程序(第二章)",
        "uri": "posts/算法分析与设计2",
        "content": "n      k                                                                                                                                                                                                                                                                                    n     k    n m                  n0 1  adhoc    1     1               k      merge k                f n              n                a n 2  x      x a n 2     x        xa n 2       a        x                        int BinarySearch_Rec int num    int target  int left  int right     left target  return BinarySearch_Rec num  target  left  mid   1   else  num mid  target  right   mid   1            else  num mid  0   if i 2  s  b  i  2  b  b    return s    Strassen           n 2      A B C          4                 n 2 n 2          C AB                         T n                T n  O  n 3                                                                                       Strassen       7   n 2           18 n 2                        T n                  T n  O  n  log7     approx O  n  2 81         Strassen                               k 0    2 k times 2 k      4  2  k 1  times 2 k 1        a         4            3               3                       L      3           b    3      L                              4                               1 times1         void chessBoard int tr  int tc  int dr  int dc  int size     size  1  return  int s   size 2         int t     num    L                 dr   tc   s                 chessBoard tr tc s dr dc s     else                  t L         Matrixtr s 1   t           chessBoard tr tc s tr s 1 tc s s                 dr    tr   s    dc   tr   s    dc    tc   s                chessBoard tr s tc s dr dc s     else      t L         Matrixtr s   t           chessBoard tr s tc s tr s tc s s             T n  O  n 2                                                                                                template void MergeSort Type a   int left int right   if left int Partition  Type a   int p int r   int  p j r 1  Type x  a p        x              x           while true   while a   i x   if i  j  break  Swap a i  a j      a p    a j   a j    x  return j                                                   0       n 1                          O  n 2           O nlogn                partition                         a p r                              template int RandomizedPartition Type a   int p int r   int   Random p r   Swap a i  a p    return Partition a p r     void RandomizedQuickSort Type a   int p int r   if p Type RandomizedSelect Type a   int p int r int k   if p  r  return a p   int i RandomizedPartition a p r   j j p 1  if j  k  return a i   if k1   table a i j n 2   table a i n 2 j n 2   copy a i j i n 2 j n 2 n 2               copy a i n 2 j n 2 n 2",
        "objectID": "posts/算法分析与设计2",
        "date": "2024-03-12T00:00:00.000Z",
        "draft": false,
        "tags": [
            "计算机算法设计与分析"
        ],
        "categories": [
            "计算机算法设计与分析"
        ]
    },
    {
        "title": "算法与程序(第三章)",
        "uri": "posts/算法分析与设计3",
        "content": "A         A                  B C         A  BC                                        ra ca   rb cb          B          c void matrixMultiply int a  int b  int   c  int ra  int ca  int rb  int cb     ca    rb  error            int i 0  0  return mi   i    j  return 0  int u   LookupChain i  i    LookupChain i 1  j    p i 1 p i p j   si   i   int k i 1  k  include using namespace std             int num1005                 int dp1005                        int main     int r  scanf   d   r           for int i 1 i  ci    ci   ci 1  bi   2    else   ci   ci  bi   3                          O 1         LCSLength    O mn                 LCSLength         b           X  x1  x2     xm   Y  y1  y2     yn            c void LCS int i  int j  char x  int b     i   0    j  0  return   bi   1    LCS i 1  j 1  x  b   cout 1  i     jMax min w i  1 c    int j 0  j   w 1   m1 max m1  m2  v 1      template class Type  void Traceback Type   m  int w  int c  int n  int x     int i 1    n  i       mi    mi 1  x i  0  else   x i    1  c    w i     xn     m n    1   0                 Knapsack    O nc        Traceback    O n             c                          3 7              CSDN",
        "objectID": "posts/算法分析与设计3",
        "date": "2024-03-25T00:00:00.000Z",
        "draft": false,
        "tags": [
            "计算机算法设计与分析"
        ],
        "categories": [
            "计算机算法设计与分析"
        ]
    },
    {
        "title": "算法与程序(第五章)",
        "uri": "posts/算法分析与设计5",
        "content": "0 1     n                                                                                                                                                                                     n    x1 x2   xn  0 1    n    xi 0 1   n          xi                                                           n                          Rightarrowh n                 O h n                  O 2  h n     O h n                                                c void backtrack  int t     t n  output x   else  int i f n t  in  output x   else  int i 1 i  0 i      x t  i   legal t   backtrack t 1                O n        c void backtrack  int t     t n  output x   else  int i t i0  T 1  1                                                                      n      1 2   n          1       2     i     j       M_ ij                 Fij   i   j                 2              f                       n                                                  3    6         1 2 3 1 3 2 2 1 3 2 3 1  3 1 2 3 2 1               19 18 20 21  19 19           1 3 2        18                   n                                       n      n n              n                                          n       n n        n      2                      n 4               4                                n    n            x1   x2       x_n         x_i  1 2     n                1      xi neq xj   2                i j   neq  xi  xj     c   bool Queen Place int k     int j 1 jn  sum    else  int i 1 in  sum    else  int i t in           bestp cp  return   if cw w i bestp         Backtrack i 1            Bound i   c   template Typep Knap  Bound int i           Typew cleft   c   cw           cw           Typep b   cp    cp                                i n             int j   1  j bestn            x i    0  backtrack i   1                         backtrack            O n2 n       m            G m              G                           G     2                 m                 m              2               m              m       m                x1   x2       xn       i     xi            i                 c   void backtrack int t     t n  sum    else  int i 1 i",
        "objectID": "posts/算法分析与设计5",
        "date": "2024-04-18T00:00:00.000Z",
        "draft": false,
        "tags": [
            "计算机算法设计与分析"
        ],
        "categories": [
            "计算机算法设计与分析"
        ]
    },
    {
        "title": "算法与程序(第六章)",
        "uri": "posts/算法分析与设计6",
        "content": "2 3 4                                                                FIFO                FIFO                                                                             2       C1 C2         i    Wi    stackrel n   sum limits i 1   wi  leq ci c2                                                                                                                             1                                           c Ew 0  Q Add  1   i 1  bestw 0    Ew                  true                Ew   w i   Q  Type wt  Type  bestw  int i  int n    if i  n   if wt bestw bestw wt              else Q add wt                                                Ew r  leq bestw             bestw       Ew              r                          bestw                 i n        c            Type wt   Ew   w i                wt bestw  bestw   wt   i bestw     1  j      bestx j    bestE  LChild  bestE   bestE  parent           L        9               bestx 1  3   0 1 1                x         x                                                                   x                       x                                                                                                                 c Templete Type MaxLoading Type w    Type c  int n  int bestx                         Ew    bestx MaxHeap  H 1000              1000 Type  r new Type  n 1   r n  0  for int j n 1 j 0 j    r j  r j 1  w j 1   int i 1  bbnode  E 0  Type Ew 0   i  n 1            Ew w i  N  H DeleteMax N   i N level  E N ptr  Ew N uweight r i 1     for int j n j 0 j            bestx j  E  lchild  E E  parent   return Ew                                                                                                                                                           0 1                                                                                                                                                                                                                                                        b          cleft          i n                                        c  i bestp  bestp   cp p i   AddLiveNode up  cp p i   cw w i   true  i 1      Bound i 1                      up    bestp               AddLiveNode up  cp  cw  false  i 1",
        "objectID": "posts/算法分析与设计6",
        "date": "2024-04-30T00:00:00.000Z",
        "draft": false,
        "tags": [
            "计算机算法设计与分析"
        ],
        "categories": [
            "计算机算法设计与分析"
        ]
    },
    {
        "title": "编译引论(第一章)",
        "uri": "posts/编译原理",
        "content": "1                                                                       FOR      I             1      TO      100      DO      2                                                                       i      5        3       j      3                                                                                                             i j  x y           i j T1     x y T2    T1 T2 T3  4                                                                                               5 3 2 T1     T1   x           10 6   x  5                                                                                 6                                   7                                                                                                                                               5                                                                                                                                                              L         L0     L1 L2      Ln                      L0          L0  L1       Li  Li n      i 1 2     n 1                     L              A          L       B          L        A       A           L                     L      A        B     L                        A    L            A       B                         1                 B        B                               LEX           YACC",
        "objectID": "posts/编译原理",
        "date": "2024-03-05T00:00:00.000Z",
        "draft": false,
        "tags": [
            "编译原理"
        ],
        "categories": [
            "编译原理"
        ]
    },
    {
        "title": "编译引论(第二章)",
        "uri": "posts/编译原理2",
        "content": "a b                 a b                         a b aa bb                                                                              x        x              x y  y         x                x y      xy    x x  x         x      x n     n      xn     x 0                   x              x          x         0                x          x         0                x         x      x      x                       x x        x     x       x               x x       x         x                         A B                   AB  xy x A y B   A        B                      x   x x       A    A A    A  A                               A          A 0         A 1  A   A 2  AA                     A         A         A              A   A 0 bigcup  A 1   bigcup  A 2   bigcup  A 3   bigcup            A         A         A              A   A 0 bigcup  A 1   bigcup  A 2   bigcup  A 3   bigcup                     A         AA          BNF                 U          U x  U  x                     G   VN   VT  S P   V_N                  V_T                S                      P                 BNF                                                                 S rightarrow  a1   S rightarrow  a2        S rightarrow  an      S rightarrow  a1   a2        an     a_i    S                                                                   U rightarrow  xUy                 U                                       U rightarrow  Uy                                U rightarrow  xU                                          G E    E rightarrow  E T T   T rightarrow  T F F   F rightarrow   E  i                                 alpha rightarrow   beta     G  VN VT S P         gamma    delta  in  VN  bigcup VT          v w     v  gamma alpha delta   w  gamma beta delta    v       alpha rightarrow beta      w    w v          v Rightarrow w               v Rightarrow w      w     v    n                 v w0 Rightarrow w1 Rightarrow       Rightarrow w_n   w  n geq1     v  n  n 0    w     v stackrel    Rightarrow w     stackrel    Rightarrow               v stackrel    Rightarrow w   v w n 0    v  n  n geq 0      w     v stackrel   Rightarrow w     stackrel   Rightarrow    0                                                                      G                                                              G S     V            u                 u   G S       u           u   G S          S stackrel   Rightarrow u   u in V     u   G S        S stackrel    Rightarrow u   u  in V_T      u   G S              G S                           L G S       L G   u  S stackrel    Rightarrow u    u in V_T                                                                             G      S   G        alpha beta delta                 S stackrel    Rightarrow  alpha  delta     A stackrel    Rightarrow beta      beta       alpha beta delta         A           A stackrel    Rightarrow beta     1            beta      alpha beta delta         A                                                                   G   VN VT P S       G                                      VNVT                       S                                                         A                  B1 B2     Bn     A rightarrow B1B2   Bn    in P                                                                                                                                                                      G1 G2                             L G1    L G2                                        U  rightarrow U                                                                                                                                                                                                                G S    S rightarrow Be   B rightarrow Ce   B rightarrow Af   A rightarrow Ae   A rightarrow e   C rightarrow Cf   D rightarrow f                                      C           D           2 6 7                                                             U       U rightarrow U alpha  beta      alpha   beta  in  VN bigcup VT       beta   U         U                     U rightarrow  beta U     U    rightarrow  alpha U    epsilon                           U  rightarrow Ux1   Ux2       Uxm y1 y2     ym                  U               U  rightarrow y1U   y2U       y_mU     U    rightarrow x1U   x2U       x_mU    epsilon                         U  stackrel    Rightarrow U            epsilon                                                        A        A  rightarrow  delta beta1  delta beta2      delta betan  gamma1  gamma2      gamman         gamma     delta                  A  rightarrow A    gamma1  gamma2      gamma_n   A   rightarrow  beta1  beta2      beta_n                                                                  LL 1                             epsilon              0    0                          alpha  rightarrow  beta       alpha  in V                  beta  in V    1                1   G             xUy  rightarrow  xuy     x y  in V   U  in V_N u  in V    2                 1           x y       epsilon                2      U  rightarrow u      U  in V_N u  in V    3            1                   ",
        "objectID": "posts/编译原理2",
        "date": "2024-03-06T00:00:00.000Z",
        "draft": false,
        "tags": [
            "编译原理"
        ],
        "categories": [
            "编译原理"
        ]
    },
    {
        "title": "编译引论(第三章)",
        "uri": "posts/编译原理3",
        "content": "TOKEN                                                                                                           5                                                  Pascal  begin end if while                                                                            100 3 14159 TRUE  Samplea                            b       i                                                     c      i    k                                                                                                                                                                                                                                                               IF WHILE                                                     DO 2  x                                                                                                                                                                                                                                                                        ch                   strtoken                   Get_char             ch              GetBC      ch                 Getchar  ch           Concat     ch           strtoken      Concat   strtoken      VA   ch     R     Concat  strtoken      VAR  Retract                    ch       Letter Digit            ch             Reserve           strtoken                                0    0          Insert_Id           strtoken                   Insert_Const           strtoken                  Error                                                                                                         switch     if   then   else                                0            Get_char    If Letter           1            else if Digit          2            else if ch  _         3            else                                 0                                   while   if                                   0          Get_char    While Letter   Digit    Get_char         1                   c                           strtoue                  Reserve                 0    strtoken              0                                                      int code value  strtoken         strtoken        Get_char    Get_BC    if Letter    begin while Letter   Digit    begin Concat    Get_char    end Retract    code  Reserve    if code   0  begin vaue  Insert_Id strtoken   return  ID value   end else return code     end else  Digit    begin while Digit    begin Concat    Get_char    end Retract    value  Insert_Const strtoken   return  INT value   end else if ch      return  ASSIGN     else if ch      return  PLUS     else if ch      begin Get_char    if ch      return  POWER     Retract    return  STAR     end else if ch      return  COMMA     else if ch      return  LPAR     else if ch      return  RPAR     else Error                          sum         sum     varepsilon  phi    cdot                                      varepsilon    phi     sum                      varepsilon     phi       a  in  sum  a   sum                    a     U V    sum                    L U  L V     U V              L U   cup L V   U  cdot V             L U L V          U                  L U              3             sum                         sum                               DFA M        M  S   sum  f s_0 Z   S                      sum                         f           S  times  sum  S      f  S1  x   S2           S1          x          S2 S2    S1           S_0  in S              Z  subseteq S                DFA                                   Si Si S           aj aj                   f  Si   aj          DFA M   A B C D   x  y   f  A  D    f                            W                                               W   W DFA  M_D      DFA  MD               L MD      M_D                          DFA     DFA           f S   S                  Si S     a   f  Si  a                                 n                     n                           f                                              NFA M        M  S   sum  f S_0 Z   S                                            ",
        "objectID": "posts/编译原理3",
        "date": "2024-03-19T00:00:00.000Z",
        "draft": false,
        "tags": [
            "编译原理"
        ],
        "categories": [
            "编译原理"
        ]
    },
    {
        "title": "编译引论(第四章)",
        "uri": "posts/编译原理4",
        "content": "LL                                                                          LR             5                                                                                                                                                                                                                 G S   S aAb A cf c              acb               S                   a    S                    a              a                            c              A          A          A     b             c            b              f     b f      A                     A                       A        A           c        c            b                                                                        A    A Aa                                    A                                   A                                                                                                                                                                                                                         LL 1    FIRST             G S     VT  VN   S   P              FIRST x     a x  stackrel   Rightarrow ay a  VT x y   V     x  stackrel     Rightarrow         FIRST x       FIRST x       x                              FIRST X             X X1X2 Xn FIRST X    i 1      Xi VT    X_i FIRST X      4     Xi VN     X_i  stackrel     nRightarrow     FIRST Xi  FIRST X     4     Xi  stackrel     Rightarrow    FIRST Xi     FIRST X      i i 1  i n    1       3      X  stackrel     Rightarrow       FIRST X             G E   E TE  E   TE    T FT  T   FT    F  E  i                TE   TE    FT  FIRST              FIRST   FOLLOW               G S     VT  VN   S   P             A V_N       FOLLOW A   a S  stackrel     Rightarrow  Aa   a V_T     S  stackrel     Rightarrow  A        FOLLOW A       FOLLOW A     G S                A                                abc FOLLOW A                G S      S    FOLLOW S      G S     U xA      x V    FOLLOW U  FOLLOW A     G S     U xAy      x V  y V     y  stackrel     nRightarrow      FIRST y  FOLLOW A    y  stackrel     Rightarrow      FIRST y     FOLLOW A  FOLLOW U  FOLLOW A         G E   E TE  E   TE    T FT  T   FT    F  E  i         FOLLOW   SELECT                       A x A VN  x V      x  stackrel     nRightarrow     SELECT A x  FIRST x    x  stackrel     Rightarrow     SELECT A x  FIRST x    FOLLOW A     SELECT A x                A x                           G S   S AB bC A b   B aD   C AD b D aS c      AB bC   AD FIRST        FOLLOW         SELECT   LL 1              LL 1                A        A        SELECT A    SELECT A         A V_N     V                            LL 1                                                                                                                                                                                LL 1                                                                                                                         LL 1    G VN VT P S  VN  X1 X2   Xn              Xi                     Xi         Xi  1  2    m             Xi                 a         j  SELECT                              if   case           Xi Y1Y2 Yk Yj VN VT             Xi                 Yj j 1 2   k         Yj VT              Yj     Yj VN          Yj               Xi                Xi                 a      FOLLOW Xi         X_i                  X_i                        LL 1     pascal       dotdot                             type  simple   id  array  simple  type                         c procedure type  begin lookahead  integer char num  simple    else lookahead     begin match       match id  end else lookahead array begin match array   match       simple     match       match of   type    end else error    end      lookahead               lookahead SELECT simple   integer char  num     simple                      match                              looahead         match             match     id                 type  id        array             array         simple           of   type      lookahead                      error        simple integer   char  num dotdot num                         c procedure simple  begin lookahead integer match integer  else lookahead char match char  else lookahead num begin match num   match dotdot   match num  end else error    end                       LL 1                                                                       L                        L                1                                                                                                                                                        M                M A a     A       a               A      a                                                                        X       a                       X a         STACK         X                       a         X a                       X V_T   X        X a                        X V_N   X                  M X a    M X a    X     X Y1Y2 YK    X                        YK  Y2 Y1                   X           X              X          M X a        error                                 LL 1        LL 1    M A a          A ",
        "objectID": "posts/编译原理4",
        "date": "2024-04-03T00:00:00.000Z",
        "draft": false,
        "tags": [
            "编译原理"
        ],
        "categories": [
            "编译原理"
        ]
    },
    {
        "title": "编译引论(第五章)",
        "uri": "posts/编译原理5",
        "content": "LR       LR                                                  LR 0  SLR 1  LALR 1  LR 1                                                                                                                    A     a                                                      a                           A                                                                                                                                           5 1                                      E  Rightarrow E T  Rightarrow E F  Rightarrow E i  Rightarrow T i  Rightarrow F i  Rightarrow i i                             LR    LR      LR                  LR k     L               R                  K                  K                     LR 0                                                                                                      LR                                                                                                                                                                        LR k                                                     LR      LR    LR                        action            goto     5 6     S1 S2    Sn            a1 a2   am                    A1 A2   A_k             action    action Si aj     Si       aj                        Si        aj           goto    goto Si Aj     Si   Aj                Si             Aj             action       4       Sm         aj          m                         r_j               j      U                   x        x         x                    U                   Si         U  goto    goto Si U            acc                                                     Error            Si                      action Si a_j                    LR          0                                a           i       a action              action i a  s_j      j       a                 action i a  r_j     j    A          t            t             A                 i         A  goto   i A        j     j           action i a  acc                            2                  LR 0              G S       G      G        S                 S   rightarrow S       0         G        G A    A  rightarrow  A     rightarrow a           G   A      A   rightarrow A   rightarrow  A  A  rightarrow                                                                                     varepsilon                           t           t                      t VT            u1u2 ur         u1u2 u_i    l i r      t                                                  u1 u1u2  u1u2 u r 1                 u1u2 ur                      u1u2 ur                                                                                      LR 0          G                                                                                     A rightarrow                 1         A  rightarrow         1   A rightarrow     A  rightarrow  AB             AB         A  rightarrow A B        A              B         A  rightarrow AB     AB                                                                       L 0              A rightarrow                                                                    S   rightarrow S                                A rightarrow    X                   X                                         X                              X                        S   rightarrow   S                    LR 0                     I                  I     CLOSURE I       I                A rightarrow  alpha  B  beta   CLOSURE I    B rightarrow  gamma                   B      B rightarrow   gamma                                     go   Ii     G S    LR 0          X  in VT VN     Ii  X       go Ii  X  CLOSURE  J   IJ     J  A rightarrow  alpha X  beta  in A rightarrow  alpha X  beta  in I_i      Ii      A rightarrow  alpha X  beta              A rightarrow  alpha X  beta     J     CLOSURE  J   LR 0                              DFA      DFA                LR 0                             DFA               LR 0          DFA         LR 0          CLOSURE I  go Ii  X               C   C  I0       I0 CLOSURE          S  rightarrow  S        Ii in C   Ii       X       go Ii  X        C    go Ii  X      C   2  C                     DFA         LR 0                 DFA                    DFA             DFA                   DFA       go I_i  X             LR 0            A  rightarrow  alpha  x  beta  in Ii     go Ii  x  I_j    x  in VT      ACTION i   x   Sj    x  in V_N     GOTO i  x  j      A  rightarrow  alpha   in Ii           a in  VT           ACTION i a  r_j      j     A  rightarrow  alpha                rightarrow  alpha    G    j          S   rightarrow S   in I_k     ACTION  k       acc           1 3          ERROR                    DFA   LR 0     LR 0              LR                                           action S a  S_j   S    a       a        j        action S a  r_j  a            j         k  j                       k                     action S a   acc  a                  goto S A  j A                           A                   j       action S a                LR 0                G     G       G    LR 0     G  LR 0      ",
        "objectID": "posts/编译原理5",
        "date": "2024-04-10T00:00:00.000Z",
        "draft": false,
        "tags": [
            "编译原理"
        ],
        "categories": [
            "编译原理"
        ]
    },
    {
        "title": "编译引论(第六章)",
        "uri": "posts/编译原理6",
        "content": "9 1               E          E      E      E   E1 op E2       op               E     E1  E2  op   E1   E2    E1 E2        E  E1           E1      E              a b    a c        ab ac   a b c d   a c        a b cd ac                                                                                                                                                        a b c d   a c        a b cd ac                                                                                                                                    x  y op z x y z                    op                                                                           x y z          T_1   y z  T2   x  T1                                                                                                                                                                                                                               syntax_directed translations                                                                                                                                                                                       CFG                                                                                      x   x                                                                                                      SDD  CFG                                                                  X        a X        X a    a      X                   SDT               CFG                                                         SDD SDT SDD                                               SDT       SDD       SDD                                         SDD       SDD  CFG                                                                         synthesized attribute       inherited attribute       synthesized attribute        N      A         N     N                                                SDD                        SDD      inherited attribute        N      A         N     N      N                                                    SDD      Attribute Grammar          SDD                                              SDT          SDT                         CFG SDT     SDD                  SDT        SDD           SDT                    LR      SDD S            LL      SDD L     S SDD   SDT    S SDD   SDT",
        "objectID": "posts/编译原理6",
        "date": "2024-04-18T00:00:00.000Z",
        "draft": false,
        "tags": [
            "编译原理"
        ],
        "categories": [
            "编译原理"
        ]
    },
    {
        "title": "计算机组成(第一章)",
        "uri": "posts/计算机组成原理",
        "content": "1 4              2 4              1 3 4              1 2 3 4                                                                                                                                                                                           CPU                                                                                                                                       I O               Read              Write",
        "objectID": "posts/计算机组成原理",
        "date": "2024-03-09T00:00:00.000Z",
        "draft": false,
        "tags": [
            "计算机组成原理"
        ],
        "categories": [
            "计算机组成原理"
        ]
    },
    {
        "title": "计算机组成(第二章)",
        "uri": "posts/计算机组成原理2",
        "content": "ASCII                                                                                                                                                                                                                                                                                                            0 leqslant x  leqslant 2 n 1                                                                                  N R E M    R         10 2    E   M        IEEE754                               32      64                                  R 2                 32      S       1        0       1       M    23                E    8                       127 64         1     11     52        1023        64    x       x   1  S times 1 M  times2  E 1023   e E 1023       32    x         x   1  S times 1 M  times2  E 127   e E 127                                                                                                     1 0                                                                                         1                                                                                                                                                              x0x1x2      xn     2  2            x0x1x2      xn      2  n 1     2 n 1              x0x1x2      xn    x _   begin cases x 1 x geq 1  2 x 0 geq x  geq  1 end cases       begin cases 0     1    end cases                                2 n sim2 n 1           0                                                            n       n                                    x _  2 n x    2 n x geq 2 n   00000000 11111111   2 n sim 2 n 1                              2 n sim 2 n 1                                                    127  1 0  1  127                          8                                    ASCII     ASCII                 10       0 9  52           a   z A Z  34      32        128          ASCII          7      128                                                                                                          2                                                                     01 10    2                                               CRC                                                               K        R                 N K R       G x  ax3 bx2 cx1 dx0        abcd    2           R     2            1  1     0  0                0       1                  CRC       1                             x y    x    y _                            x y    x     y _         X    Y    X Y _        x                                                                                                                                          P  X   times  Y     Ps Xs bigoplus Y_s      Ps         Xs   Y_s                                            1          0         0                     n  2   3                                                              A                      B               C                         A 00 0000 B  X  00 1101 C  Y    1011                       A B n 2  C n      n 2      A C                      A      C      C           A            C            C                       0                                                                                                          2                            X  times Y    X    times  O X1X2   Xn   X    times Y_0                      Booth          Booth                                         X    X0 X1X2     _n  Y    Y    0 Y1Y2    Yn    XY     X  0 Y1Y2    Y_n   Y    Y  1 Y1Y2    Yn    XY     X  0 Y1Y2     Yn    X    Y        XY     X  0 Y1Y2     Yn    X  Y0      Y0       BOOTH           Z0     0    Z1     2   1    Z0    Yn 1 Yn  X_        Z2     2   1    Z1    Yn Y n 1   X_                 Zn     2   1    Zn 1    Y2 Y1  X_        therefore  X  times Y      Zn     Y1 Ys  X         Z0           Z1      Zn _                      BOOTH                                        Y_ n 1      0                          Yn   Y n 1                                n 1    n     n 1                X  0 1101 Y  0 1011    XY _      A 00 0000 B  X_   11 0011   B    X    00 1101 C  Y   1 0101 A B             C                                   A B C n 2      n 2      n 2                              C                   0                                                             E 0          E 1                   1                0  bigoplus   A             1  bigoplus      A         E      1 11110   1 00010                      n 1           t n2T 5T    n2T        5T                                                            0 10110  div 0 11111                                                                                                      0                                                    X  0 10110 Y 0 11111  X Y    Q   R    A        B    C        A  X  00 10110   B  Y  00 11111    B 11 00001   C  Q  0 00000     A B     X Y     X    Y             2   n                                   r i 1  2ri  1 2Q_i Y   ri      Qi  1  i 1   2r_i Y   ri      Qi  0  i 1   2r_i Y     X 0 10110 Y  0 11111  X Y    Q   R     A  X  00 10110 B  Y  00 11111  B 11 00001 C  Q  0 00000      A B      X Y        X 0   Ex Ey    E0 ",
        "objectID": "posts/计算机组成原理2",
        "date": "2024-03-16T00:00:00.000Z",
        "draft": false,
        "tags": [
            "计算机组成原理"
        ],
        "categories": [
            "计算机组成原理"
        ]
    },
    {
        "title": "计算机组成(第三章)",
        "uri": "posts/计算机组成原理3",
        "content": "Write       Read                                     bit                                            CPU                                                                                                                                                                                       ROM RAM       ROM                                        RAM                                                                                                                                                     Cache                                                                                                                      B Byte                  b  Bit             2_ 10  1024     KB MB GB TB      10_3 1000     KB MB GB TB                                                                                                                   c int i  short k  double x  char c  short j   int  4    short  2    double  8    char  1    short 16     int 32    double 64                                  SRAM   RAM Static RAM                                           DRAM   RAM Dynamic RAM     MOS                 Refresh                     SRAM  SRAM    6                   N  1 4 8 16 32                                                          2M N         M          N        SRAM         CS CE                                               OE                           MEMR      WE                             MEMW    SRAM     SRAM Cell  SRAM                        X        Y                                                                                                             X  Y                 RAM                               b                                                BS0  BS1                            2                                                M                      RAM                         N    b    RAM                      N 1   b           N b                       N 1                       N  n            Nx    Ny         CPU   n                 nx    ny                                                                                                               CPU    CPU                                                            CPU                                                                                         RAM  2114          RAM  2114         MOS    4   M0S       6               T0 T1            T4  T5      T0  T1                                      MOS                                       2ms                                              4                                                                                         MOS                                                                          DRAM      DRAM         Precharge        Access       T_1                                         Sense              1     0       Restore      1       1               Output                                                            DRAM                                                               2ms 4ms 8ms                                                              CPU       DRAM                                2ms                                               2ms                                 2ms 100ns 20000                          2ms           2ms    2ms 128 15 5        128            1M 1   512 2048  DRAM              8ms        512    2048                8ms   512            8ms           512            t0 512 T  T               8ms  512       8ms 512 15 625 s                                                                       CPU                                                               DRAM                                                 DRAM              EDRAM   EDRAM       DRAM     DRAM        SRAM                 DRAM            EDRAM      EDRAM    1M 4  8              1M 32                    8 EDRAM       8 4     D3 D0   32              32      FPM DRAM                                                                                        CPU                                                                                CDRAM          SDRAM                                             SDRAM                      CPU   CPU                                                                      CPU                                                                           MOS     RAM                                                8    RAM       8K 8       8  m 1                   8                                                                                16k 8            64k 8      4                  A0 A13     14              A14 A15 2 4    4       CE                       M N     l k     l M  k N                      M l   N k            M l   M N      M l               N k              log_2  l                  l     log_2   M l                           ROM            ROM                                    ROM        ROM      MROM   ROM           PROM      ROM              EPROM       ROM               ROM EEPROM       ROM                  Flash Memory                 ROM                                                                                                            EEPROM",
        "objectID": "posts/计算机组成原理3",
        "date": "2024-03-31T00:00:00.000Z",
        "draft": false,
        "tags": [
            "计算机组成原理"
        ],
        "categories": [
            "计算机组成原理"
        ]
    },
    {
        "title": "计算机组成(第四章)",
        "uri": "posts/计算机组成原理4",
        "content": "8      3          32         5                                                                                                                              OP  A      AC  OP  A     AC                      A1  OP  A2     A1                       A1  OP  A2     A3   OP        AC        AC     A         A                A                                                                      SS                                                                                    RR                                                                                           RS                                                                                                                         L       N                                                                         CPU                                                                                                                          1 0                                               3  4                                                                                              8        8                                                                1                           2  3                                                          16      32       64                    16  OP                                 16  OP                                                                                                                                                                                                                                                          CPU            PC             PC                       PC  1                                                                                             PC 1                                                                                                                       AC          AC                                                                                                                            D                               D            F      F 1        F 0                                                         D                                                                                        D                          D                                                                                                                   CPU           AX BX CX DX                                                                             PC               D                                                                                                                                                                                                                                                                                                         A     D   A D                            E  A D                           D  N   N         A                           E A  D  A N                                           I O                                                                                8086                      Intel 8086 8088    ALU16            1M     20                                                                                                                                                                             RS                                                  RR        16          8                       8                                               R                                                                                                         SP              CPU          SP              SP                                                                                     8086       sp    MOV sp  im        PUSH DOWN          sp    ss        PUSH AX                                                                                                                                                                                                                                 8088 8086           MOV AX TEMP    MOV TEMP AX    MOV AX CX                 ADD ADC        INC   1  SUB DEC     1  MUL    DIV                      NEG    CMP       NOT AND OR XOR TEST       AND              JMP      C Z S P O      JSR       RET      IRET          AX n n  AX              CLC clear carry flag  STC  set carry flag  CLI  clear interrupt elable flag  HLT WAIT ESC LOCK                  CISC RISC CISC        RISC        CISC                                               RISC                                         Load Store                     RISC",
        "objectID": "posts/计算机组成原理4",
        "date": "2024-04-15T00:00:00.000Z",
        "draft": false,
        "tags": [
            "计算机组成原理"
        ],
        "categories": [
            "计算机组成原理"
        ]
    },
    {
        "title": "计算机组成(第五章)",
        "uri": "posts/计算机组成原理5",
        "content": "CPU                                                                                                                                 CPU Central Processing Unit  CPU                               CPU                                                                                            CPU                                                                                                     CPU          I O                                                                            CPU                DR                            IR                      PC                   AR      CPU                    ALU              PSW                                                                                                                                                                                            CPU                                   CPU                  CPU               CPU                      T                CPU       T         1           CPU   1 CPU       T                                                                     PC                MAR         AB         CU       CB                          DB            MDR    MDR           IR     PC                                                                                         ID                                                                                                                                                                                                                                                                                                 CPU                                                   in                                  out                                 MAR IN  PC OUT                 ADD  R0  R1            R0                      R1                          R0    R1   R0                                    PC OUT  MAR IN       PC CPU      MAR      PC MAR                 Read            MAR             MDR   M MDR   MDR OUT    IR IN      MDR          IR   MDR IR                        CU  PC   1   PC 1 PC                                      R_1    R0 OUT    MAR IN               MAR       R_0  MAR            Read           MAR             MDR    MDR OUT    Y IN       M MDR Y                              R1 OUT    ALU IN       CU ALU  ADD       R1    Y            Z   R1 Y Z  Z OUT    MDR IN              MDR   Z MDR           Write 5             CLA          CLA     CLA   ADD             ADD   STA             STA   NOP   JMP             JMP                                    CPU                                          CPU                                  CPU                                         DR       IR                                                                                                                                                                                                                                                                                          CPU      CPU            CPU           CPU                           CPU     3                                                                                                                           ALU                                                     1 N                            3                                                  3             3                                                                                                                                                                          CPU                                                                                                                                                                                                                                                                                                                                                                                                                                                    A B         A             B                                                                                                                                                                                                                                                                                           CM                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ",
        "objectID": "posts/计算机组成原理5",
        "date": "2024-04-25T00:00:00.000Z",
        "draft": false,
        "tags": [
            "计算机组成原理"
        ],
        "categories": [
            "计算机组成原理"
        ]
    },
    {
        "title": "c++(one)",
        "uri": "posts/面向对象程序设计",
        "content": "",
        "objectID": "posts/面向对象程序设计",
        "date": "2024-03-08T00:00:00.000Z",
        "draft": false,
        "tags": [
            "面向对象程序设计"
        ],
        "categories": [
            "面向对象程序设计"
        ]
    },
    {
        "title": "c++(two)",
        "uri": "posts/面向对象程序设计2",
        "content": "c      c    c                            C       c                  c             c                                            include using namespace std  int main      cout                                      C                                                                                                                  TAB            Enter                                       _                      _    0 9                                                   C                                                                                               C                                                                                                                                                            C                                                                        auto                                         register           extern                 static                                                                                                      a b x y                                                                                                                                                                                                                                                                 i   j                                  a         1     1  a               a       a                a 1                            n n 5 a b c 5                                                                          10        10                                                      1    2            1    2         2                                                                               bool     true false              true false          C    0         0                                                                 rightarrow                bool     true false                      1    2    3    1   bool              1     1   true       2    2            1   false       3    3        sizeof         sizeof      sizeof                                                                                                    0            char   a     0 a a 0376                                                       1            int   a      1  a a 0xff                                            0              1            0        1                                                                  cin cin                  cin                 int x y  cin  x  y          int              I O             cout   cout iostream        iostream              ostream cout stdout                 cin   cin istream                        cerr    I O                              9 40               9 40007     6          manipulators    I O 1        I O        I O                                                   setw n              setw n                              setw 4                 setw n                                 8            8   16   3        hex oct dec  3     iostream h               setfill                  setfill    iomanip h               I O                iomanip h  setiosflags ios  left             iomanip h  setiosflags ios  right                    iomanip h  setiosflags ios  showpoint                                                    if         if              if                            if          if              if                               else    if            c   if   if     1 else   2 else if     3 else   4      1 2 3 4           if else               switch                                 case                            case       break         0 6             include void main void   int day  cin  day  switch day   case0 cout void main    inti 1  sum 0             while i void main    int i 1  sum 0     sum  i  i     while i 100  break          for i 1 1 i     sum  i  if i  100  break       3                     3                                                         for i 1 i void mian    int i 1  a 0   for  i void main    int n  for n 100 n using namespace std  enum game_result WIN LOSE TIE CANCEL   void main    game_result result                 enum enum game_result omit CANCEL             enum int count  for count WIN count  include struct student            int num  char name 20   char sex  int age   stu  97001  LinLin   F  19                        stu void main    cout stu Age                            stu2   stu1                                      cout stu1 Age      stu1                           cin  stu1               include struct student             int num  char name 20   char sex  struct date   int month  int day  int year   birthday  float score  char addr 30    stu              void main    stu birthday month 9  stu birthday   day   20  stu birthday   year   1996  cout  include struct student             int num       char name 20        char sex       int age       float score       char addr 30         stu  97001       F  19         void main     cout struct aircraft   int wingspan        int passengers        union                    float fuel _load             float bomb _load             int pallets                 fighter bomber transport ",
        "objectID": "posts/面向对象程序设计2",
        "date": "2024-03-09T00:00:00.000Z",
        "draft": false,
        "tags": [
            "面向对象程序设计"
        ],
        "categories": [
            "面向对象程序设计"
        ]
    },
    {
        "title": "c++(three)",
        "uri": "posts/面向对象程序设计3",
        "content": "C C               C                                                                                                                 C                                                   return          c   return 0           void       return                                     C   C                             PASCAL    C        main              main    main             main             c   int main    float add float x float y          float a b c  cin  a  b  c add a b   coutb  a b                 c   void delay long a   for int i 1 i x  return x                   c   void message void                 cout2  return fib x 1  fib x 1           else return 1               c   int fn1 int a   int b  b fn2 a 1                  int fn2 int s   int c  c fn1 s 1                                       n       n        n    begin cases 1  n 0   n n 1    n 0  end cases                          c   long Factorial long n   if n  0  return 1  else return n Factorial n 1           n                                                                                    4  4 3                                                   0  1                                                              c    include void count int val                  if val 1  count val 1   cout1                           count val 1                  c    include void count int val    count val 1            if val 1            cout  include void Hanoi int n string A string B string C                 if n  1  cout void Swap int a int b   int main     int x 5  y 10   cout void main    int intOne  int  rInt intOne  intOne 5  cout void Swap int  a  int  b   int main      int x 5   y 10   cout using namespace std  int isnumber char          int main    char c  while  c cin get       n                  n       if isnumber c             cout  0   ch void main    char c  while  c cin get       n    if  ch   0   ch  0   ch inline int isnumber char     inline     void main     char c  while  c cin getc       n     if isnumber c             cout  0   ch int isnumber char        inline void main     char c  while  c cin getc       n     if isnumber c             cout  0   ch inline int max int a int b intc   if b a  a b  if c a  a c  return a    void main    int i 7 j 10 k 25 m  m max i j k               max i j k     max        max i j k               max i j k             j i     j        k i     k     m i  cout struct complex   double real  double imaginary     void main void    int m  n  double x  y  complex c1  c2  c3  int add int m  int n   double add double x  double y   complex add complex c1  complex c2   cout m  n  cout x  y  cout c1 real  c1 imaginary  cout c2 real  c2 imaginary  c3 add c1 c2   cout                                              typename  c   template T func T x                     class template T func T x   c   template   template                                       c    include template T abs  T x    return x using namespace std           template T add T t1  T t2    return t1   t2    int main     cout using namespace std  template T add T t1  T t2    return t1   t2    template int add int t1  int t2           int   int main     cout  10   B",
        "objectID": "posts/面向对象程序设计3",
        "date": "2024-03-21T00:00:00.000Z",
        "draft": false,
        "tags": [
            "面向对象程序设计"
        ],
        "categories": [
            "面向对象程序设计"
        ]
    },
    {
        "title": "c++(four)",
        "uri": "posts/面向对象程序设计4",
        "content": "c   int Hour int Minute int Second                                           c   SetTime   ShowTime           c   class Clock  public  void SetTime int NewH int NewM int NewS   void ShowTime    private  int Hour Minute Second                      c   char name char sex int age int id   string name string sex int age int id                  c   GetCloth   Eat   Step                 c   Work   Promote                                                                                                                                                                        c   class Clock  public  void SetTime int NewH int NewM int NewS   void ShowTime      SetTime   ShowTime        private  int Hour Minute Second    public private                        C                                               C                                                                                                                                   C                                               4             c                                                                                                              C                                                                                                                                                                                              c   class       public             private       protected                        public                interface                                   private                                       private                                c   void Clock  SetTime int NewH int NewM int NewS    Hour   NewH  Minute   NewM  Second   NewS    void Clock  ShowTime     cout  include  date h  void Date   Set int m  int d int y    month m  day d  year y    void Date   Print      cout class Clock                                 void main void    Clock myClock  myClock SetTime 8 30 30   myClock ShowTime                C        C                         C                                                                                                          c     C        Struct SMyPoint   int x y  void Draw      cout class Clock   public  Clock int NewH 7 int NewM 30 int NewS 0                   hour NewH  minute NewM  second NewS    void ShowTime     cout class Desk   public  Desk               protected  int weight  int height  int width  int length     class Stool   public  Stool               protected   int weight  int height  int width  int length     Desk    Desk               weight   10  height   5  width   5  length   5  cout class point   point       public         point  int xx 0   int yy   0   X   xx   Y   yy           point  point  p            int GetX      return X   int GetY      return Y   private          int X  Y                point  point  point  p    X   p X   Y   p Y   cout class Point   public  Point   int xx  int yy     Point                 private  int X  Y                                                      35         20           3                                c    include const float PI   3 14159  const float FencePrice   35  const float ConcretePrice   20  class Circle   private  float radius  public  Circle float r          float Circumference           float Area                                    radius Circle  Circle float r   radius r             float Circle  Circumference      return 2   PI   radius             float Circle  Area      return PI   radius   radius    void main       float radius  float FenceCost  ConcreteCost              cout radius        Circle    Circle Pool radius   Circle PoolRim radius   3               FenceCost   PoolRim Circumference     FencePrice  cout  include class point   point      public  point  int xx   0   int yy   0     X   xx   Y   yy    point  point  p   int Getx      return X   int Gety      return Y   private  int x   y      point  point point  p    X   p x   Y   p y   cout class classname                                 class                                                                          c   template      classname    MemberFuncName1                       template      classname   MemberFuncName2                                                                                   c   classname object                            classname       template class   object                 c    include template class TestClass   public  T buffer i   void setArray     void showArray       template void TestClass  setArray      for int j 0 j buffer j      template void TestClass  showArray     for int j 0 j ClassInst  ClassInst setArray    ClassInst showArray                a   b   c   d   e   abcde                                                                                                        c   Template Class Store   Private  T item  Public  Store      T GetElem      void Putelem  T x      Void main void    Store s1  s2  Store s3        Store s1 s2               Class Store       Private     int item    Public     Store         int GetElem         void Putelem  int x            Store s3               Class Store       Private     Student item    Public     Store         Student Get",
        "objectID": "posts/面向对象程序设计4",
        "date": "2024-03-22T00:00:00.000Z",
        "draft": false,
        "tags": [
            "面向对象程序设计"
        ],
        "categories": [
            "面向对象程序设计"
        ]
    },
    {
        "title": "c++(five)",
        "uri": "posts/面向对象程序设计5",
        "content": "C                                                                                    C                                                                                               c   double Area double width  double length   length   50 0          width length                                             c   double Area double   double                                                               c   void fun int a    int b a   cin  b    b      b 0    int c    c              cout m          prt   X           X  m                   c   class Myclass   public  void f1       m   5     void f2       int m  m   2    Myclass  m      int getm     return m    private  int m     void main     Myclass c  c m   10        c f1      cout using namespace std  namespace first   int x   5  int y   10    namespace second   double x   3 1416  double y   2 7183    int main      using first  x  using second  y  cout namespace first   int a 10  int b 20  namespace second   double a 1 02  double b 5 002  void hello      void second  hello     std  cout using namespace std  int i                  namespace Ns   int j     Ns            int main       5         i   Ns  j   6         j    using namespace Ns                 Ns         int i                 7  cout int   2  j 3          void main      int   5           int i           7  cout int   5          int main      cout class Clock           public         Clock     void SetTime int NewH  int NewM  int NewS                    void ShowTime       Clock      private           int Hour Minute Second                 Clock  Clock            Hour 0  Minute 0  Second 0    void Clock  SetTime int NewH  int NewM  int NewS    Hour NewH  Minute NewM  Second NewS    void Clock  ShowTime      cout int global  void f      global 5   void g      cout class Application   public  void f     void g     private  int global     void Application  f      global 5   void Application  g      cout int global  void f      global 5   void g      cout class Application   public  void f     void g     private  int global     void Application  f      global 5    void Application  g      cout class Clock           public         void SetTime int NewH  int NewM  int NewS                    void ShowTime     private           int Hour Minute Second                                                              c   class employee   private  int EmpNo  int ID  char  name                                                                                                C                            static                                                                                                                                                                   c   include using namespace std  class   public  static int x     int A  x  void main     cout class Point   public  Point int xx 0  int yy 0    X   xx  Y   yy  countP      Point Point  p   int GetX     return X   int GetY     return Y   void GetC      cout class Application   public  static void f     static void g     private  static int global     int Application  global 0  void Application  f      global 5   void Application  g      cout  include class Point   Point      public         Point float xx 0  float yy 0   X xx Y yy   int GetX     return X   int GetY     return Y             friend float fDist Point  a  Point  b   private           int X Y     float fDist  Point  a  Point  b              double dx a X b X  double dy a Y b Y  return sqrt dxdx dydy     void main      Point p1 3 0  5 0   p2 4 0  6 0   float d fDist  p1  p2   cout     const           const                                              C      const          C        define   c   const int var     Error       var          const int var1   42  var1   43     Error                          const                                            c   const int sz   42  int iAr sz   const int sz1   size       size               int iAr1 sz1   int var   42  const int sz2   var  int iAr2 sz2      error sz2                             c   const         1  const         2    const      const                    const        const        const          c   const int ii   456  int  rii   ii     error int jj   123  const int  rjj   jj     ok    const                      const                                c   const int  r   100            int   50  const int  r2   r   i        r       double dVal   3 1415  const int  ri   dVal             double                        int temp   dVal     create temporary int double const int  ri   temp     bind ri temporary                                                           c      const            const                  c   Time const t1 12 34 36       t1                 t1                                                                    const                                          c   void display   const double  r    void main      double d   9 5    display d     void display const double  r                    r              r   15 5       cout using namespace std  class   int w h  const int cctw 5          void main     a        cout using namespace std  class   int w h  co",
        "objectID": "posts/面向对象程序设计5",
        "date": "2024-03-31T00:00:00.000Z",
        "draft": false,
        "tags": [
            "面向对象程序设计"
        ],
        "categories": [
            "面向对象程序设计"
        ]
    },
    {
        "title": "c++(six)",
        "uri": "posts/面向对象程序设计6(上)",
        "content": "void                                                                                                                                      c                                               int a 10             10    a 0    a 9                                                                  a 0  a 5  a 7  a 2 3                 c    include void main      int A 10  B 10   int i  for i 0 i void main     static int a3   1 2 3 4   5 6 7 8   9 10 11 12    static int b3  1 2 3 4 5 6 7 8 9 10 11 12   static int c3     1   0 6   0 0 1 1    static int d3    1 0 6 0 0 1 1   int i j   i 0 i  a   c  A   c  score      aver   average   score    cout void RowSum int   int nrow     int   0  void RowSum int   int nrow    int sum   int   0  void isort int     int size   void main      int array      18 12 10 12 30 16   int size   6   int  0  i 0    inserter  include  Location h  Location  Location      X Y 0  cout  include  Location h  int main      cout using namespace std  int main     int i      int  i int  ptr    i     i     ptr   10    int      cout using namespace std  int main         void voidObject          void      void  pv          void      int   5  pv    i    void             void       int     int  pint   static_cast pv   cout void main      int  ipointer      int   ipointer int i      int  i ipointer  i     i     ipointer i 10    int      cout   int iCount   18   int   iPtr    iCount   iPtr   58   cout y     px                                                                                                                                                                                                                                                                                                 c   p    0      p    0                                      0           0        NULL      c   int  p         int   p p   0      p                                     c   int a 10    p  p    a 0       p   a                           p   a 0   p 1    a 1         p i    a i   a      p i    a i   p               a                       int   a  10                          c   int main      int a 10   int i  for i 0  i a i   cout a i   cout a i   cout void main      int array22   11 12 13   21 22 23    for int i 0 i void splitfloat   float x  int intpart float fracpart          intpart  fracpart       intpart   int x       x      fracpart   x   intpart     x        void main void    int i  n  float x  f   i   0    x  splitfloat   x   n   f                                          c            float average   float array      int n     int i  float aver  sum   array  0       1  int   getInt char   str            int value   20  cout                  c    include class Point   public  Point  int xx  int yy   X   xx  Y   yy    int GetX      return X    int GetY      return Y    private  int X  Y     void main      Point p1 5 10   Point  ptr  ptr  p1  cout GetX     GetX          ptr  X   15       this                                                                                                                        this                                      this                         this                                                                                                                     c                                                                                                                                                                                                                                                                                      c                                                             c                                      c                                                                     c    include using namespace std  class Point   public  Point  int xx  int yy   X   xx  Y   yy    int GetX      return X    int GetY      return Y    private  int X  Y     void main            point A 4 5          A point  p1    A                int  point   p_GetX       point  GetX                 coutGetX     using namespace std  class point   public  point  int xx   0  int yy   0           X   xx  Y   yy  countp      point  point  p            int GetX      return X    int GetY      return Y    stacit int countp                 private  int X  Y     point  point point  p    x   p x   y   p y   countp         int point  countp   0                 void main              int  count    point  countp        int             point A 4 5          A cout using namespace std  class point   public  point  int xx   0  int yy   0           X   xx  Y   yy  countp      point  point  p            int GetX      return X    int GetY      return Y    static void Getc              cout",
        "objectID": "posts/面向对象程序设计6(上)",
        "date": "2024-04-18T00:00:00.000Z",
        "draft": false,
        "tags": [
            "面向对象程序设计"
        ],
        "categories": [
            "面向对象程序设计"
        ]
    },
    {
        "title": "c++(six)",
        "uri": "posts/面向对象程序设计6(下)",
        "content": "",
        "objectID": "posts/面向对象程序设计6(下)",
        "date": "2024-04-20T00:00:00.000Z",
        "draft": false,
        "tags": [
            "面向对象程序设计"
        ],
        "categories": [
            "面向对象程序设计"
        ]
    }
]